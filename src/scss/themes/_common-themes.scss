$themes: (
  'cookbook': (
    'primary': rgb(51, 134, 212),
    'on-primary': #fff,
  ),
  'cake': (
    'primary': rgb(199, 159, 98),
    'on-primary': #fff,
  ),
  'lollipop': (
    surface: false,
  )
);

@function get-color($map, $variant) {
  $value: map-get($map, $variant);
  @if $value != null {
    @return $value;
  }
  @return null;
}

/* Notes: 
Domain idea:
.domain--jb {
  .theme--cake {
    --surface: rgb(64, 64, 64);
    --on-surface: rgba(255, 255, 255, 0.87);
  }
}
This wouldn't require the css to be build XX number of times.

Color naming convention from Material design:
https://material.io/design/color/the-color-system.html#color-theme-creation

HIERARCHY: 
  .domain--name {
    .theme--name { (e.g. dark (Maybe bad), light (Maybe bad), cake, lollipop, 'some other neutral nonsense name') 
      --background 
      --on-background
      --surface
      --on-surface
      --primary
      --on-primary
      --primary-variant (Optional - a darker/lighter version of primary)
      --on-primary-variant (Optional)
      --secondary
      --on-secondary
      --tertiary (Optional...not sure if its even necessary yet)
      --ontertiary (Optional)
      --error
      --on-error
      --warning
      --on-warning
    }
  }

Use opacity for text importance
  - 87% Opacity for High Emphasis
  - 60% Opacity for Medium Emphasis / Helper texts
  - 35% Opacity for DISABLED
  - 100% for Error texts

*/
