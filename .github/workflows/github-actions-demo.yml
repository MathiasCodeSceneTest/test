name: GitHub Actions Demo
on: [push]
jobs:
  Explore-GitHub-Actions:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
        with:
          token: ${{secrets.VERSION_BUMP_GITHUB_TOKEN}}
      - name: Get Node.JS version from package.json
        run: echo "NODE_VERSION=$(jq -r .engines.node ./package.json)" >> $GITHUB_ENV
      - name: Install Node.js
        uses: actions/setup-node@v2
        with:
          node-version: ${{env.NODE_VERSION}}
      - name: Raw copy to tmp-hash-files
        run: cp package.json hash-file1-tmp.json && cp package-lock.json hash-file2-tmp.json
      - name: Change version in package files
        run: jq '.version ="1.2.3"' hash-file1-tmp.json > package.json && jq '.version ="1.2.3"' hash-file2-tmp.json > package-lock.json          
      - name: Prepare hash-files
        run: jq 'del(.version)' package.json > hash-file1.json && jq 'del(.version)' package-lock.json > hash-file2.json
      - name: Fetch Node Modules Cache
        uses: actions/cache@v2
        id: cache
        with:
          path: | 
            **/node_modules
          key: node-modules-${{runner.os}}-${{env.NODE_VERSION}}-${{hashFiles('**/hash-file1.json', '**/hash-file2.json')}}
      - name: Dump Hash
        run: echo "The cache hash key is 'node-modules-${{runner.os}}-${{env.NODE_VERSION}}-${{hashFiles('**/hash-file1.json', '**/hash-file2.json')}}'."
      - name: Remove hash-files
        run: rm hash-file1.json && rm hash-file2.json

      - name: Clean Install NPM Dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: echo NO HIT!
      - name: Run Postinstall Script
        if: steps.cache.outputs.cache-hit == 'true'
        run: echo HIT

      - name: Prepare hash-files
        run: jq 'del(.version)' package.json > hash-file1.json && jq 'del(.version)' package-lock.json > hash-file2.json
      - name: Dump hash before version change
        run: echo "The new cache hash key is 'node-modules-${{runner.os}}-${{env.NODE_VERSION}}-${{hashFiles('**/hash-file1.json', '**/hash-file2.json')}}'."

      - name: Raw copy to tmp-hash-files
        run: cp package.json hash-file1-tmp.json && cp package-lock.json hash-file2-tmp.json
      - name: Change version in package files
        run: jq '.version ="1.2.3"' hash-file1-tmp.json > package.json && jq '.version ="1.2.3"' hash-file2-tmp.json > package-lock.json
      - name: Prepare hash-files
        run: jq 'del(.version)' package.json > hash-file1.json && jq 'del(.version)' package-lock.json > hash-file2.json
      - name: Dump hash after version change
        run: echo "The new cache hash key is 'node-modules-${{runner.os}}-${{env.NODE_VERSION}}-${{hashFiles('**/hash-file1.json', '**/hash-file2.json')}}'."

      - name: Cat package
        run: cat package.json
      - name: Cat package-lock
        run: cat package-lock.json
      - name: --Demo--
        run: echo "🎉 The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "🎉 The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "🐧 This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      - run: echo "🔎 The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
      - run: echo "💡 The ${{ github.repository }} repository has been cloned to the runner."
      - run: echo "🖥️ The workflow is now ready to test your code on the runner."
      - name: List files in the repository
        run: |
          ls ${{ github.workspace }}
      - run: echo "🍏 This job's status is ${{ job.status }}."
